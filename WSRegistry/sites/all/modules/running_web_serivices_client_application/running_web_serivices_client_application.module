<?phpinclude_once 'running_web_serivices_client_application.inc';include_once 'running_web_serivices_client_application_defined.inc';/* * Implemetn hook_permission() */function running_web_serivices_client_application_permission(){  return array(    'running demo web services execution' => array(          'title'=> t('running demo web services execution'),          'description' => t('running demo web services execution'),  ),     );}/** * NGUYEN HAI THANH * HOOK MENU */function running_web_serivices_client_application_menu(){  $items = array();  $items[WSREGISTRY_WSEXECUTION_DEMO_RUNNING] = array(          'title' => 'Web Services Execution - Demo Running',          'description' => 'Web Services Execution - Demo Running.',          'page callback' => 'drupal_get_form',          'page arguments' => array('ws_execution_demo_running_form',1),          'access arguments' => array('running demo web services execution'),          'type' => MENU_NORMAL_ITEM,  );    $items[WSREGISTRY_WSEXECUTION_DEMO_RUNNING_RESULT] = array(          'title' => 'Web Services Execution - Result',          'description' => 'Web Services Execution - Result.',          'page callback' => 'drupal_get_form',          'page arguments' => array('ws_execution_demo_running_result_form',1),          'access arguments' => array('running demo web services execution'),          'type' => MENU_NORMAL_ITEM,  );  return $items;}/*************************************************************************************************//**************************************HOOK FORM**************************************************//*************************************************************************************************/function ws_execution_demo_running_result_form($form,&$form_state){  $ws_id = arg(3);    $ws_object = get_ws_result_from_id($ws_id);  $display = $ws_object->ws_output;      $form['raw_result'] = array(           '#type' => 'textarea',           '#description' => t('Result for execution  Web Serivces'),           '#title' => t('Raw Result :'),           '#default_value' => $display,           '#required' => TRUE,           '#size' => 100,           '#attributes' => array('readonly' => 'readonly'),           '#maxlength' => 10000000,  );    $form['view_tree'] = array(    '#type' => 'link',    '#title' => t('View Tree Data'),    '#href' => 'http://128.123.177.13/Phylotastic_DisplayTree_Project/display_tree.html?uri=&tree_data='. $display . '&format=newick_text',  );    return $form;}function ws_execution_demo_running_form($form, &$form_state){       $form['ws_wsdl_url'] = array(           '#type' => 'textfield',           '#description' => t('URI to WSDL file for this Web Serivces'),           '#title' => t('WSDL URI :'),           '#default_value' => "",           '#required' => TRUE,           '#size' => 100,           '#maxlength' => 600,   );      $options = array(       1 => ' ',       2 => 'PhylotasticWS_Get_GeneSpeciesReconciliationTree_by_gene_tree_WF1',       3 => 'resolveScientificNames',       4 => 'findScientificNamesWithURL',       5 => 'findScientificNamesWithText',	   6 => 'getScientificNames',	   7 => 'ForesterWS_GetSpeciesList_By_GeneTree',	   8 => 'ForesterWS_GetReconciliationTree',	   9 => 'PhylotasticPrunner_GetPhylotasticSpeciesTree',	   10 => 'createPDFReader',	   11 => 'createPhyloPDF',	   12 => 'getPhylogeneticTree',        );     $form['ws_function_name'] = array(           '#type' => 'select',           '#description' => t('Operation name in Web Services'),           '#title' => t('Function (or Operation) name :'),           '#default_value' => 1,           '#required' => TRUE,           '#options' => $options,           '#maxlength' => 600,           '#attributes' => array('onchange' => 'if (document.getElementById("edit-ws-function-name").value == 2) {           				                              var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  var des_input_2 = y[3];       												  des_input_1.innerHTML = "Gene Tree Data";       												  des_input_2.innerHTML = "Format (Newick, PhyloXML, NeSON...)";       											 } else if (document.getElementById("edit-ws-function-name").value == 3) {       											   	  var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  des_input_1.innerHTML = "Names";       											 } else if (document.getElementById("edit-ws-function-name").value == 4) {       											   	  var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  des_input_1.innerHTML = "URL";       											 } else if (document.getElementById("edit-ws-function-name").value == 5) {       											   	  var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  des_input_1.innerHTML = "Text";       											 } else if (document.getElementById("edit-ws-function-name").value == 6) {       											   	  var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  des_input_1.innerHTML = "Token";       											 } else if (document.getElementById("edit-ws-function-name").value == 7) {       											   	  var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  var des_input_2 = y[3];       												  des_input_1.innerHTML = "Gene Tree Data";       												  des_input_2.innerHTML = "Format (Newick, PhyloXML, NeSON...)";       											 } else if (document.getElementById("edit-ws-function-name").value == 8) {       											   	  var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  var des_input_2 = y[3];       												  des_input_1.innerHTML = "WS ID";       												  des_input_2.innerHTML = "Species Tree Data";       											 } else if (document.getElementById("edit-ws-function-name").value == 9) {       											   	  var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  var des_input_2 = y[3];       												  var des_input_3 = y[4];       												  des_input_1.innerHTML = "Species List";       												  des_input_2.innerHTML = "Tree";       												  des_input_3.innerHTML = "Format (Newick, PhyloXML, NeSON...)";       											 } else if (document.getElementById("edit-ws-function-name").value == 10) {       											   	  var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  des_input_1.innerHTML = "File";       										     } else if (document.getElementById("edit-ws-function-name").value == 11) {       											   	  var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  des_input_1.innerHTML = "File";	       										     } else if (document.getElementById("edit-ws-function-name").value == 12) {       											   	  var y = document.getElementsByClassName("description");        												  var des_input_1 = y[2];       												  des_input_1.innerHTML = "URL";  											     } else {											 	 }											 												    '),   );      $form['ws_input_params_1'] = array(           '#type' => 'textarea',           '#description' => t('The First Input'),           '#title' => t('The first Input in this WS Operation :'),           '#default_value' => "",           '#size' => 100,           '#maxlength' => 10000000,           '#states' => array(                  'visible' => array(                        array(                              array(':input[name="ws_function_name"]' => array('value' => 2)),                              'or',                              array(':input[name="ws_function_name"]' => array('value' => 3)),                              'or',                              array(':input[name="ws_function_name"]' => array('value' => 4)),                              'or',                              array(':input[name="ws_function_name"]' => array('value' => 5)),                              'or',                              array(':input[name="ws_function_name"]' => array('value' => 6)),                               'or',                              array(':input[name="ws_function_name"]' => array('value' => 7)),                               'or',                              array(':input[name="ws_function_name"]' => array('value' => 8)),                              'or',                              array(':input[name="ws_function_name"]' => array('value' => 9)),                              'or',                              array(':input[name="ws_function_name"]' => array('value' => 12)),                        ),           ),    ),   );      $form['ws_input_params_2'] = array(           '#type' => 'textarea',           '#description' => t('The Second Input'),           '#title' => t('The Second Input in this WS Operation :'),           '#default_value' => "",           '#size' => 100,           '#maxlength' => 10000000,           '#states' => array(                  'visible' => array(                           array(                              array(':input[name="ws_function_name"]' => array('value' => 2)),                               'or',                              array(':input[name="ws_function_name"]' => array('value' => 7)),                               'or',                              array(':input[name="ws_function_name"]' => array('value' => 8)),                               'or',                              array(':input[name="ws_function_name"]' => array('value' => 9)),                        ),            ),   ),   );      $form['ws_input_params_3'] = array(           '#type' => 'textarea',           '#description' => t('The Third Input'),           '#title' => t('The Third Input in this WS Operation :'),           '#default_value' => "",           '#size' => 100,           '#maxlength' => 10000000,           '#states' => array(                  'visible' => array(                                  ':input[name="ws_function_name"]' => array('value' => 9),           ),   ),    );      $form['ws_input_params_4'] = array(           '#type' => 'textarea',           '#description' => t('The Forth Input'),           '#title' => t('The Forth Input in this WS Operation :'),           '#default_value' => "",           '#size' => 100,           '#maxlength' => 10000000,           '#states' => array(                  'visible' => array(                                  ':input[name="ws_function_name"]' => array('value' => 999),           ),   ),    );         $form['ws_input_params_5'] = array(           '#type' => 'textarea',           '#description' => t('The Fifth Input'),           '#title' => t('The Fifth Input in this WS Operation :'),           '#default_value' => "",           '#size' => 100,           '#maxlength' => 10000000,           '#states' => array(                  'visible' => array(                                  ':input[name="ws_function_name"]' => array('value' => 999),           ),   ),    );      $form['ws_input_params_6'] = array(           '#type' => 'textarea',           '#description' => t('The Sixth Input'),           '#title' => t('The Sixth Input in this WS Operation :'),           '#default_value' => "",           '#size' => 100,           '#maxlength' => 10000000,           '#states' => array(                  'visible' => array(                                  ':input[name="ws_function_name"]' => array('value' => 999),           ),   ),    );      $form['ws_file_params_1'] = array(        '#type' => 'file',        '#title' => t('Choose a PDF file'),        '#states' => array(                  'visible' => array(                           array(                              array(':input[name="ws_function_name"]' => array('value' => 10)),                        ),            ),       )   );      $form['submit'] = array(      '#value' => t('Execute'),      '#type' => 'submit',      '#title' => t('Execute'),      '#submit' => array('ws_execution_demo_running_form_submit'),   );      return $form;} function ws_execution_demo_running_form_submit($form, &$form_state){   $ws_wsdl_url = $form_state['values']['ws_wsdl_url'];   $id_ws_function_name = $form_state['values']['ws_function_name'];   if ($id_ws_function_name == 2){     $ws_function_name = "PhylotasticWS_Get_GeneSpeciesReconciliationTree_by_gene_tree_WF1";   } else if ($id_ws_function_name == 3) {     $ws_function_name = "resolveScientificNames";   } else if ($id_ws_function_name == 4) {     $ws_function_name = "findScientificNamesWithURL";   } else if ($id_ws_function_name == 5) {     $ws_function_name = "findScientificNamesWithText";   } else if ($id_ws_function_name == 6) {     $ws_function_name = "getScientificNames";   } else if ($id_ws_function_name == 7) {     $ws_function_name = "ForesterWS_GetSpeciesList_By_GeneTree";   } else if ($id_ws_function_name == 8) {     $ws_function_name = "ForesterWS_GetReconciliationTree";    } else if ($id_ws_function_name == 9) {     $ws_function_name = "PhylotasticPrunner_GetPhylotasticSpeciesTree";   } else if ($id_ws_function_name == 12) {     $ws_function_name = "getPhylogeneticTree";   } else {     $ws_function_name = "";   }   if ($id_ws_function_name == 10){         $validators = array();         $file = file_save_upload('ws_file_params_1', $validators, 'public://pdf/');         $ws_input_1 = $file->filename;         $ws_function_name = "createPDFReader";         $cmd = 'curl -X POST http://103.56.157.84:4567/ -F file=@C:\xampp\htdocs\WSRegistry\sites\default\files\pdf\\' . $ws_input_1;         $output = exec($cmd);         $ws_input_params = "";         $insert_ws_id = insert_web_service_execution_logging($ws_wsdl_url, $ws_function_name, $cmd, $output);         drupal_set_message("<br/><b>WSDL: </b>" . $ws_wsdl_url . "<br/><br/><b>Operation:</b> " . $ws_function_name, $type = 'status');         $form_state['redirect'] = 'WSExecution/demoWSRunning/result/'. $insert_ws_id ;   } else {       $ws_input_1 = $form_state['values']['ws_input_params_1'];       $ws_input_2 = $form_state['values']['ws_input_params_2'];       $ws_input_3 = $form_state['values']['ws_input_params_3'];       $ws_input_4 = $form_state['values']['ws_input_params_4'];       $ws_input_5 = $form_state['values']['ws_input_params_5'];       $ws_input_6 = $form_state['values']['ws_input_params_6'];              $ws_wsdl_url = trim($ws_wsdl_url);       $ws_function_name = trim($ws_function_name);       $ws_input_1 = trim($ws_input_1);       $ws_input_2 = trim($ws_input_2);       $ws_input_3 = trim($ws_input_3);       $ws_input_4 = trim($ws_input_4);       $ws_input_5 = trim($ws_input_5);       $ws_input_6 = trim($ws_input_6);            try{                   $url = "http://128.123.177.21:5003/WSExecution/runWSFunctionWithWSDL_json";          $content = '{"ws_function_name":"' . $ws_function_name .'", "ws_wsdl_url":"' . $ws_wsdl_url . '", "ws_input_params" : ["' . $ws_input_1 .'","' . $ws_input_2 .'","' .  $ws_input_3 . '","' .  $ws_input_4 . '","' .  $ws_input_5 . '","' .  $ws_input_6 . '"]}';          $curl = curl_init($url);          curl_setopt($curl, CURLOPT_HEADER, false);          curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);          curl_setopt($curl, CURLOPT_HTTPHEADER, array("Content-type: application/json"));          curl_setopt($curl, CURLOPT_POST, true);          curl_setopt($curl, CURLOPT_POSTFIELDS, $content);              $json_response = curl_exec($curl);              $status = curl_getinfo($curl, CURLINFO_HTTP_CODE);          if ( $status != 201 && $status != 200 ) {              die("Error: call to URL $url failed with status $status, response $json_response, curl_error " . curl_error($curl) . ", curl_errno " . curl_errno($curl));          }          curl_close($curl);          $response = json_decode($json_response, true);          $result = $json_response;       } catch(Exception $ex){          $result = $ex;       }        	  $result = utf8_encode($result);            $ws_input_params = $ws_input_1 . "|" . $ws_input_2 . "|" . $ws_input_3 . "|" . $ws_input_4 . "|" . $ws_input_5 . "|" .$ws_input_6;      $insert_ws_id = insert_web_service_execution_logging($ws_wsdl_url, $ws_function_name, $ws_input_params, $result);      drupal_set_message("<br/><b>WSDL: </b>" . $ws_wsdl_url . "<br/><br/><b>Operation:</b> " . $ws_function_name, $type = 'status');      $form_state['redirect'] = 'WSExecution/demoWSRunning/result/'. $insert_ws_id ;         } }